# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        l3 = ListNode()
        h=l3
        s=[]
        car=0
        while l1 or l2 or car!=0:
            if l1 and l2:
                if l1.val+l2.val+car<=9:
                    s.append(l1.val+l2.val+car)
                    car=0
                else:
                    s.append((l1.val+l2.val+car)%10)
                    car=1
                l1=l1.next
                l2=l2.next
            elif l1 and not l2:
                if l1.val+car<=9:
                    s.append(l1.val+car)
                    car=0
                else:
                    s.append((l1.val+car)%10)
                    car=1
                l1=l1.next
            elif l2 and not l1:
                if l2.val+car<=9:
                    s.append(l2.val+car)
                    car=0
                else:
                    s.append((l2.val+car)%10)
                    car=1
                l2=l2.next
            elif (not l1 and not l2) and car>0:
                s.append(car)
                car=0
        for i in s:
            n = ListNode(i)
            h.next=n
            h=n
        return l3.next
