from collections import deque
class FrontMiddleBackQueue:

    def __init__(self):
        self.queue=deque()

    def pushFront(self, val: int) -> None:
        self.queue.appendleft(val)

    def pushMiddle(self, val: int) -> None:
        i=int(len(self.queue)/2)
        self.queue.insert(i,val)

    def pushBack(self, val: int) -> None:
        self.queue.append(val)

    def popFront(self) -> int:
        if len(self.queue)<1:
            return -1
        return self.queue.popleft()

    def popMiddle(self) -> int:
        if len(self.queue)<1:
            return -1
        else:
            if len(self.queue)%2==1:
                i=int(len(self.queue)/2)
                data= self.queue[i]
                del self.queue[i]
                return data
            else:
                i=int(len(self.queue)/2)
                data= self.queue[i-1]
                del self.queue[i-1]
                return data

    def popBack(self) -> int:
        if len(self.queue)<1:
            return -1
        return self.queue.pop()


# Your FrontMiddleBackQueue object will be instantiated and called as such:
# obj = FrontMiddleBackQueue()
# obj.pushFront(val)
# obj.pushMiddle(val)
# obj.pushBack(val)
# param_4 = obj.popFront()
# param_5 = obj.popMiddle()
# param_6 = obj.popBack()
